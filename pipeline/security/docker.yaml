docker-trivy:
  stage: docker-trivy
  image: docker:stable
  services:
    - name: docker:dind
      command: ["dockerd-entrypoint.sh"]
  variables:
    IMAGE: ephemera:$CI_COMMIT_SHA
    TRIVY_NO_PROGRESS: "true"
    TRIVY_CACHE_DIR: ".trivycache/"
  before_script:
    - export TRIVY_VERSION=$(wget -qO - "https://api.github.com/repos/aquasecurity/trivy/releases/latest" | grep '"tag_name":' | sed -E 's/.*"v([^"]+)".*/\1/')
    - echo $TRIVY_VERSION
    - wget --no-verbose https://github.com/aquasecurity/trivy/releases/download/v${TRIVY_VERSION}/trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz -O - | tar -zxvf -
  allow_failure: true
  script:
    - docker build -t $IMAGE .
    - ./trivy image --exit-code 0 --format template --template "@/contrib/gitlab.tpl" -o gl-container-scanning-report.json $IMAGE
    - ./trivy image --exit-code 0 --severity HIGH $IMAGE
    - ./trivy image --exit-code 1 --severity CRITICAL $IMAGE
  cache:
    paths:
      - .trivycache/
  artifacts:
    reports:
      container_scanning: gl-container-scanning-report.json

docker-snyk:
  stage: docker-snyk
  image: docker:latest
  services:
    - docker:dind
  variables:
    IMAGE_NAME: ephemera:$CI_COMMIT_SHORT_SHA
  script:
    - apk add --no-cache curl nodejs npm
    - npm install -g snyk
    - snyk auth $SNYK_TOKEN

    - docker build -t $IMAGE_NAME .

    - snyk container test $IMAGE_NAME --file=app/Containerfile --severity-threshold=high
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"

docker-grype:
  stage: docker-grype
  image:
    name: docker:latest

docker-anchore:
  stage: docker-anchore
  image:
    name: docker.io/anchore/syft:latest
